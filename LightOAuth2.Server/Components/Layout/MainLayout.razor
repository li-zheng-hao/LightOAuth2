@using LightOAuth2.Server.Core
@using LightOAuth2.Server.Services
@using System.ComponentModel
@inherits LayoutComponentBase
@implements IDisposable


<main>
    <PageHeader Title="@Title" Style="background:#F5F5F5;box-shadow: 0px 2px 2px rgba(0,0,0,0.2)">

        <PageHeaderExtra>
            <Button OnClick="GoHome">主页</Button>
            @if (UserStateContainer.IsLogin == false)
            {
                <Button OnClick="Login">登录</Button>
            }
            else
            {
                <Button OnClick="LogOut">退出登录</Button>
            }
        </PageHeaderExtra>
    </PageHeader>
    @Body
</main>

@code {
    public string Title { get; set; } = "OAuth2统一登录中心";
    @inject NavigationManager navigationManager
    @inject AuthenticationService authenticationService
    @inject UserService userService
    [Inject]
    public UserStateContainer UserStateContainer{ get; set; }
    
    protected override void OnInitialized()
    {
        UserStateContainer.PropertyChanged += PropertyChanged;

    }
    public void PropertyChanged(object? sender, PropertyChangedEventArgs e)
    {
        StateHasChanged();
    }

    public void Dispose()
    {
        UserStateContainer.PropertyChanged -= PropertyChanged;
    }
    protected override async Task OnAfterRenderAsync(bool first)
    {
        if (first)
        {
            UserStateContainer.PropertyChanged += PropertyChanged;
            if (await authenticationService.IsLoginAsync())
            {
                UserStateContainer.IsLogin = true;
            }
            else
            {
                UserStateContainer.IsLogin = false;
            }
        }

        
    }

    private void GoHome()
    {
        navigationManager.NavigateTo("/");

    }
    private void Login()
    {
        UserStateContainer.IsLogin = false;
        navigationManager.NavigateTo("/");
    }
    private async Task LogOut()
    {
       
        await authenticationService.SignOutAsync();
        UserStateContainer.IsLogin = false;
        navigationManager.NavigateTo("/");
    }

   
}

